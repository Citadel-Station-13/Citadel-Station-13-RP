## Set to 0 to disable holidays (you monster)
ALLOW_HOLIDAYS

## Starlight for exterior walls and breaches. Uncomment for starlight!
## This is disabled by default to make testing quicker, should be enabled on production servers or testing servers messing with lighting
#STARLIGHT

## Engine submap probabilities
## Supermatter
ENGINE_SUBMAP EngineSubmap_SM 40
## R-UST Fusion
ENGINE_SUBMAP EngineSubmap_RUST 40
## Tesla
ENGINE_SUBMAP EngineSubmap_Tesla 20
## Singulo
ENGINE_SUBMAP EngineSubmap_Singulo 20

###Master Controller High Pop Mode###

##The Master Controller(MC) is the primary system controlling timed tasks and events in SS13 (lobby timer, game checks, lighting updates, atmos, etc)
##Default base MC tick rate (1 = process every "byond tick" (see: tick_lag/fps config settings), 2 = process every 2 byond ticks, etc)
##	Setting this to 0 will prevent the Master Controller from ticking
BASE_MC_TICK_RATE 1

##High population MC tick rate
##	Byond rounds timer values UP, but the tick rate is modified with heuristics during lag spites so setting this to something like 2
##	will make it run every 2 byond ticks, but will also double the effect of anti-lag heuristics. You can instead set it to something like
##	1.1 to make it run every 2 byond ticks, but only increase the effect of anti-lag heuristics by 10%. or 1.5 for 50%.
##	(As an aside, you could in theory also reduce the effect of anti-lag heuristics in the base tick rate by setting it to something like 0.5)
HIGH_POP_MC_TICK_RATE 1.1

##Engage high pop mode if player count raises above this (Player in this context means any connected user. Lobby, ghost or in-game all count)
HIGH_POP_MC_MODE_AMOUNT 65

##Disengage high pop mode if player count drops below this
DISABLE_HIGH_POP_MC_MODE_AMOUNT 60

## Uncomment to prevent the world from sleeping while no players are connected after initializations
#RESUME_AFTER_INITIALIZATIONS

## Uncomment to set the number of /world/Reboot()s before the DreamDaemon restarts itself. 0 means restart every round. Requires tgstation server tools.
#ROUNDS_UNTIL_HARD_RESTART 10

## How long in seconds after which a hard delete is treated as causing lag. This can be a float and supports a precision as low as nanoseconds.
#HARD_DELETES_OVERRUN_THRESHOLD 0.5

## Once a typepath causes overrun from hard deletes this many times, stop hard deleting it on garbage collection failures. (set to 0 to disable)
#HARD_DELETES_OVERRUN_LIMIT 0
