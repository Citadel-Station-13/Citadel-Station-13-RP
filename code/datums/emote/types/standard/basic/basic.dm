//* This file is explicitly licensed under the MIT license. *//
//* Copyright (c) 2024 Citadel Station Developers           *//

/**
 * Basic emotes that just emit a simple message or something.
 *
 * * This is in reality just a generic emote subtype that handles most cases.
 * * 'arbitrary' will be a list of key-values, with EMOTE_PARAMETER_KEY_*.
 * * parameters are a list of strings; you can do strings with spaces with "string here". \" will escape doublequotes, \\ will escape a \
 * * named parameters are not yet supported. it's too expensive to process these.
 * * you are allowed one custom parameter in addition to default parameters generated by this type (like 'target').
 * * the custom parameter will be under EMOTE_PARAMETER_KEY_CUSTOM.
 */
/datum/emote/standard/basic
	abstract_type = /datum/emote/standard/basic

	//* Feedback *//

	/// outgoing saycode type flags
	var/feedback_saycode_type = SAYCODE_TYPE_AUTO

	/// if existing, we jump immediately if there is a target set to this,
	/// replacing %USER% with the user and %TARGET% with the target
	///
	/// * If heard, audible has %USER% replaced with "someone" if the viewer is blind.
	/// * If heard, audible has %TARGET% replaced with "someone" if the viewer is blind.
	/// * If the replacement is at the start of the string, it'll be capitalized as needed.
	var/feedback_special_targeted_replace
	/// Audible descriptor override; other rules still apply for targeted replace
	///
	/// * requires the normal message to be set for this to be invoked.
	var/feedback_special_targeted_replace_audible

	/// if existing, we jump priority 1 to "[user] [feedback_direct]"
	///
	/// * If heard, audible is "[can see user? user : "Someone"] [feedback_direct]"
	var/feedback_1_direct_append
	/// Audible descriptor override; other rules still apply for direct append
	///
	/// * requires the normal message to be set for this to be invoked.
	var/feedback_1_direct_append_audible
	/// if existing, we jump priority 2 to "[replacetext(feedback_user_replace, "%USER%", "[user]")]"
	///
	/// * If heard, audible has %USER% replaced with "[can see user? user : "Someone"]""
	/// * If the replacement is at the start of the string, it'll be capitalized as needed.
	var/feedback_2_user_replace
	/// Audible descriptor override; other rules still apply for user replace.
	///
	/// * requires the normal message to be set for this to be invoked.
	var/feedback_2_user_replace_audible

	//* Parameter *//

	/// your custom parameter help string
	var/parameter_custom_description

	//* Targeting *//

	/// Allows targeting?
	var/target_allowed = FALSE
	/// requires a target?
	var/target_required = FALSE
	/// maximum distance target can be from us
	var/max_distance = 7

/datum/emote/standard/basic/New()
	if(isnull(parameter_description))
		parameter_description = generate_parameter_description()
	else
		stack_trace("[NAMEOF(src, parameter_description)] was set, but it should be autogenerated!")
	..()

/datum/emote/standard/basic/proc/generate_parameter_description()
	#warn impl

/datum/emote/standard/basic/process_parameters(datum/event_args/actor/actor, parameter_string)
	#warn impl

/datum/emote/standard/basic/try_run_emote(datum/event_args/actor/actor, list/arbitrary)
	. = ..()
	#warn impl

/datum/emote/standard/basic/run_emote(datum/event_args/actor/actor, list/arbitrary)
	. = ..()
	#warn impl

/**
 * Processes a custom parameter
 */
/datum/emote/standard/basic/proc/process_custom_parameter(datum/event_args/actor/actor, string)
	// default to just spitting the string back out
	return string

#warn impl


