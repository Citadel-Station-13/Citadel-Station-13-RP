//* This file is explicitly licensed under the MIT license. *//
//* Copyright (c) 2023 Citadel Station developers.          *//

/**
 * left behind by teleports / generated by portals
 */
/datum/bluespace_wake
	/// source turf
	var/turf/source
	/// destination turf
	var/turf/destination
	/// is still active (open portals)
	var/still_active = FALSE
	/// bidirectional in nature (but not necessarily usage)
	var/was_bidirectional = FALSE
	/// power
	var/power = 0
	/// boost power
	var/boost = 0
	/// inherent instability
	var/instability = 0
	/// inherent inaccuracy
	var/inaccuracy = 0
	/// ignore jamming
	var/shielded = FALSE
	/// ignore boosting
	var/isolated = FALSE
	/// graphics
	var/atom/movable/overlay/bluespace_wake/overlay
	/// closed at
	var/closed_at
	/// duration before fading, set after closing
	var/duration

	#warn impl

/datum/bluespace_wake/New(turf/source, turf/dest, bidirectional)
	src.source = source
	src.destination = dest
	src.was_bidirectional = bidreictional
	SStelesci.register_bluespace_wake(src)

/datum/bluespace_wake/Destroy()
	SStelesci.unregister_bluespace_wake(src)
	return ..()

/datum/bluespace_wake/proc/close(falloff_duration)
	still_active = FALSE
	#warn impl

/datum/bluespace_wake/proc/effective_coefficient()
	return 1

/datum/bluespace_wake/linear/proc/effective_coefficient()
	if(still_active)
		return 1
	if(world.time > closed_at + duration)
		return 0
	return 1 - ((world.time - closed_at) / duration)

/datum/bluespace_wake/logarithmic/proc/effective_coefficient()
	#warn impl or change logarhtmic to something else?

/atom/movable/overlay/bluespace_wake
	#warn impl
