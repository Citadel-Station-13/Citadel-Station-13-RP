name: CI Suite
on:
  push:
    branches:
    - master
    - 'project/**'
  pull_request:
    branches:
    - master
    - 'project/**'
jobs:
  run_linters:
    name: Run Linters
    runs-on: ubuntu-22.04
    concurrency:
      group: run_linters-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Restore SpacemanDMM cache
        uses: actions/cache@v3
        with:
          path: ~/SpacemanDMM
          key: ${{ runner.os }}-spacemandmm
      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: tgui/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('tgui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Restore Node cache
        uses: actions/cache@v3
        with:
          path: ~/.nvm
          key: ${{ runner.os }}-node-${{ hashFiles('dependencies.sh') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Restore Bootstrap cache
        uses: actions/cache@v3
        with:
          path: tools/bootstrap/.cache
          key: ${{ runner.os }}-bootstrap-${{ hashFiles('tools/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-bootstrap-
      - name: Restore Rust cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust
      - name: Install Tools
        run: |
          pip3 install setuptools
          bash tools/ci/install_node.sh
          bash tools/ci/install_spaceman_dmm.sh dreamchecker
          tools/bootstrap/python -c ''
          cargo install ripgrep --features pcre2
      - name: Run Linters
        run: |
          bash tools/ci/check_filedirs.sh citadel.dme
          bash tools/ci/check_changelogs.sh
          bash tools/ci/check_grep.sh
          bash tools/ci/check_misc.sh
          tools/build/build --ci lint tgui-test
          tools/bootstrap/python -m dmi.test
          tools/bootstrap/python -m mapmerge2.dmm_test
          ~/dreamchecker > ${GITHUB_WORKSPACE}/output-annotations.txt 2>&1
        # This is supposed to go after `bash tools/ci/check_misc.sh`
        #  tools/bootstrap/python tools/validate_dme.py <citadel.dme
      - name: Annotate Lints
        uses: yogstation13/DreamAnnotate@v2
        if: always()
        with:
          outputFile: output-annotations.txt

  compile_all_maps:
    name: Compile Maps
    runs-on: ubuntu-22.04
    concurrency:
      group: compile_all_maps-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond
      - name: Compile All Maps
        run: |
          bash tools/ci/install_byond.sh
          source $HOME/BYOND/byond/bin/byondsetup
          tools/build/build --ci dm -DCIBUILDING -DCITESTING -DALL_MAPS

  run_all_tests:
    name: Integration Tests
    concurrency:
      group: run_all_tests-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Restore BYOND cache
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond
      - name: Setup database
        run: |
          sudo systemctl start mysql
          mysql -u root -proot -e 'CREATE DATABASE ss13_ci;'
          mysql -u root -proot ss13_ci < SQL/database_schema_prefixed.sql
          mysql -u root -proot ss13_ci < SQL/unified_schema.sql
        # mysql -u root -proot -e 'CREATE DATABASE tg_ci_prefixed;'
        # mysql -u root -proot tg_ci_prefixed < SQL/tgstation_schema_prefixed.sql
      - name: Install rust-g
        run: |
          bash tools/ci/install_rust_g.sh
      - name: Compile and run tests
        run: |
          bash tools/ci/install_byond.sh
          source $HOME/BYOND/byond/bin/byondsetup
          tools/build/build --ci dm -DCIBUILDING -DCITESTING
          bash tools/ci/run_server.sh
        env:
          CBT_BUILD_MODE: TEST_RUN
