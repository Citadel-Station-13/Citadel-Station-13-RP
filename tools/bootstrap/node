#!/bin/bash
## bootstrap/node
##
## This will download / load a vendored version of node, as specified by dependencies.sh

# Set flags
set -e

# Init
our_directory="$(dirname "$0")"
source "$our_directory/common.sh"
initialize_bootstrap

# echo "bootstrap-node: starting (bash)"

node_path="$cache_dir/node-v$NODE_VERSION_PRECISE"
node_exe="ERROR-UNSET"

# Detect system
if [[ "$(uname)" = "Linux" ]]; then
	# echo "bootstrap-node: linux mode"
	node_path="$node_path-linux-x64"
	node_exe="$node_path/bin/node"

	if [[ ! -f "$node_exe" ]]; then
		# echo "bootstrap-node: node not found, downloading"
		node_archive="$node_path.tar.gz"
		curl "https://nodejs.org/download/release/v$NODE_VERSION_PRECISE/node-v$NODE_VERSION_PRECISE-linux-x64.tar.gz" --create-dirs -o "$node_archive"
		# echo "bootstrap-node: extracting new node"
		mkdir -p "$node_path"
		tar -xf "$node_archive" -C "$cache_dir"
		node_path="$node_path/bin"
		node_exe="$node_path/node"
	else
		:
		# echo "bootstrap-node: node found at $node_exe"
	fi
else
	# echo "bootstrap-node: windows mode"
	node_path="$node_path-windows-x64"
	node_exe="$node_path/node.exe"

	if [ ! -f "$node_exe" ]; then
		echo "bootstrap-node: node not found, downloading"
		curl "https://nodejs.org/download/release/v$NODE_VERSION_PRECISE/win-x64/node.exe" -o "$node_exe"
	fi
fi

# Add node to path

export PATH=$node_path:$PATH

# Invoke Node with passed in params

# echo "bootstrap-node: path is $node_exe"
echo "Using vendored node ($("$node_exe" --version))"
exec "$node_exe" "$@"
